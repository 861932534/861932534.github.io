<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>排序</title>
      <link href="/2023/11/17/%E6%8E%92%E5%BA%8F/"/>
      <url>/2023/11/17/%E6%8E%92%E5%BA%8F/</url>
      
        <content type="html"><![CDATA[<h1 id="排序"><a href="#排序" class="headerlink" title="排序"></a>排序</h1><h3 id="桶排序"><a href="#桶排序" class="headerlink" title="桶排序"></a>桶排序</h3><p>知识点：<a href="https://blog.csdn.net/qq_52253798/article/details/122970542?ops_request_misc=&request_id=&biz_id=102&utm_term=%E6%A1%B6%E6%8E%92%E5%BA%8F&utm_medium=distribute.pc_search_result.none-task-blog-2~all~sobaiduweb~default-1-122970542.nonecase&spm=1018.2226.3001.4187">1</a>  <a href="https://blog.csdn.net/qq_27198345/article/details/126516234?ops_request_misc=%257B%2522request%255Fid%2522%253A%2522170021142516800186522337%2522%252C%2522scm%2522%253A%252220140713.130102334..%2522%257D&request_id=170021142516800186522337&biz_id=0&utm_medium=distribute.pc_search_result.none-task-blog-2~all~top_positive~default-1-126516234-null-null.142%5Ev96%5Epc_search_result_base5&utm_term=%E6%A1%B6%E6%8E%92%E5%BA%8F&spm=1018.2226.3001.4187">2</a> </p><p>相关题目：<a href="https://ac.nowcoder.com/acm/skill/detail/acm/1296">牛客</a>   </p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>stl容器</title>
      <link href="/2023/11/16/stl%E5%AE%B9%E5%99%A8/"/>
      <url>/2023/11/16/stl%E5%AE%B9%E5%99%A8/</url>
      
        <content type="html"><![CDATA[<h1 id="stl容器"><a href="#stl容器" class="headerlink" title="stl容器"></a>stl容器</h1><h2 id="map：关联容器"><a href="#map：关联容器" class="headerlink" title="map：关联容器"></a>map：关联容器</h2><p>知识点： <a href="https://blog.csdn.net/sevenjoin/article/details/81943864?ops_request_misc=%257B%2522request%255Fid%2522%253A%2522170012272716800225546285%2522%252C%2522scm%2522%253A%252220140713.130102334..%2522%257D&request_id=170012272716800225546285&biz_id=0&utm_medium=distribute.pc_search_result.none-task-blog-2~all~top_positive~default-1-81943864-null-null.142%5Ev96%5Epc_search_result_base5&utm_term=map&spm=1018.2226.3001.4187">csdn</a>     <a href="https://oi-wiki.org/lang/csl/associative-container/#map">oi-wiki</a>    </p><h3 id="queue-队列"><a href="#queue-队列" class="headerlink" title="queue: 队列"></a>queue: 队列</h3><p>知识点：<a href="https://blog.csdn.net/fuhanghang/article/details/125087433?ops_request_misc=%257B%2522request%255Fid%2522%253A%2522170027848916800182192819%2522%252C%2522scm%2522%253A%252220140713.130102334..%2522%257D&request_id=170027848916800182192819&biz_id=0&utm_medium=distribute.pc_search_result.none-task-blog-2~all~top_positive~default-1-125087433-null-null.142%5Ev96%5Epc_search_result_base5&utm_term=queue&spm=1018.2226.3001.4187">csdn</a>   </p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>贪心问题1</title>
      <link href="/2023/11/11/%E8%B4%AA%E5%BF%83%E9%97%AE%E9%A2%981/"/>
      <url>/2023/11/11/%E8%B4%AA%E5%BF%83%E9%97%AE%E9%A2%981/</url>
      
        <content type="html"><![CDATA[<h1 id="23-11-15"><a href="#23-11-15" class="headerlink" title="23-11-15"></a>23-11-15</h1><h2 id="一、删除问题"><a href="#一、删除问题" class="headerlink" title="一、删除问题"></a>一、删除问题</h2><h2 id="二、陶陶摘苹果（升级版）—-贪心问题"><a href="#二、陶陶摘苹果（升级版）—-贪心问题" class="headerlink" title="二、陶陶摘苹果（升级版）—-贪心问题"></a>二、陶陶摘苹果（升级版）—-贪心问题</h2><p>方法1（我的解法）：</p><p>思路：使用pair来存储高度和体力值，用sort两次排序。第一次按高度从小到大排序（排序范围：1-n），第二次在第一次的基础上按体力值从小到大排序（排序范围1-cnt&#x2F;&#x2F;cnt是小于等于淘淘能够够到的高度的苹果的数量）。然后用循环扫一遍就可以。</p><p>代码：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line">#include&lt;bits/stdc++.h&gt;</span><br><span class="line">using namespace std;</span><br><span class="line">const int N=1e4;</span><br><span class="line">typedef pair&lt;int,int&gt; PII;</span><br><span class="line">PII x[N];</span><br><span class="line">int n,s,a,b;</span><br><span class="line">bool cmp(PII a,PII b)&#123;</span><br><span class="line">return a.second&lt;b.second;</span><br><span class="line">&#125;</span><br><span class="line">int main()</span><br><span class="line">&#123;</span><br><span class="line">cin&gt;&gt;n&gt;&gt;s&gt;&gt;a&gt;&gt;b;</span><br><span class="line">int cnt=0;</span><br><span class="line">for(int i=0;i&lt;n;i++)&#123;</span><br><span class="line">cin&gt;&gt;x[i].first&gt;&gt;x[i].second;</span><br><span class="line">if(x[i].first&lt;=a+b) cnt++;</span><br><span class="line">&#125;</span><br><span class="line">sort(x,x+n);</span><br><span class="line">sort(x,x+cnt,cmp);</span><br><span class="line">int res=0;</span><br><span class="line">for(int i=0;i&lt;cnt;i++)&#123;</span><br><span class="line">if(s&gt;=x[i].second)&#123;</span><br><span class="line">res++;</span><br><span class="line">s-=x[i].second;</span><br><span class="line">//cout&lt;&lt;x[i].first&lt;&lt;x[i].second&lt;&lt;endl;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">cout&lt;&lt;res&lt;&lt;endl;</span><br><span class="line">return 0;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>方法2：使用dfs，搭配剪枝，使用变量存储来减少函数的调用以及记忆化搜索来降低时间复杂度。</p><p>代码：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line">#include&lt;bits/stdc++.h&gt;</span><br><span class="line"></span><br><span class="line">using namespace std;</span><br><span class="line">int n,s,a,b;</span><br><span class="line">bool visit[5005][5005];//记忆化搜索</span><br><span class="line">int mem[5005][5005];</span><br><span class="line">struct apple &#123;</span><br><span class="line">int xi,yi;</span><br><span class="line">&#125;ap[5005];</span><br><span class="line">int dfs(int num,int rest)&#123;</span><br><span class="line">if(num&gt;n||a+b&lt;ap[num].xi) return 0;//剪枝 </span><br><span class="line">if(visit[num][rest]) return mem[num][rest];</span><br><span class="line">visit[num][rest]=true;</span><br><span class="line">int maxn=dfs(num+1,rest);//减少函数的调用 </span><br><span class="line">if(ap[num].xi&lt;=a+b&amp;&amp;rest&gt;=ap[num].yi)&#123;</span><br><span class="line">int t= dfs(num+1,rest-ap[num].yi)+1;//减少函数的调用</span><br><span class="line">maxn=t&gt;maxn?t:maxn;</span><br><span class="line">&#125;</span><br><span class="line">return mem[num][rest]=maxn; </span><br><span class="line">&#125; </span><br><span class="line"></span><br><span class="line">bool cmp(apple a,apple b)&#123;//从小到大 </span><br><span class="line">return a.xi&lt;b.xi;</span><br><span class="line">&#125;</span><br><span class="line">int main()</span><br><span class="line">&#123;</span><br><span class="line">cin&gt;&gt;n&gt;&gt;s&gt;&gt;a&gt;&gt;b;//苹果个数，体力值，板凳高度，伸长手高度 </span><br><span class="line">for(int i=1;i&lt;=n;i++) cin&gt;&gt;ap[i].xi&gt;&gt;ap[i].yi;</span><br><span class="line">sort(ap+1,ap+n+1,cmp);</span><br><span class="line">cout&lt;&lt;dfs(1,s);//面对第一个苹果，体力值为s </span><br><span class="line">return 0;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>方法3、dp（动态规划），比较简单的01背包问题</p><p>代码：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">#include&lt;bits/stdc++.h&gt;</span><br><span class="line"></span><br><span class="line">using namespace std;</span><br><span class="line">int n,s,a,b;</span><br><span class="line">int xi[5005],yi[5005];</span><br><span class="line">int dp[5005][1001];</span><br><span class="line">int main()</span><br><span class="line">&#123;</span><br><span class="line">cin&gt;&gt;n&gt;&gt;s&gt;&gt;a&gt;&gt;b;</span><br><span class="line">for(int i=1;i&lt;=n;i++)</span><br><span class="line">cin&gt;&gt;xi[i]&gt;&gt;yi[i];</span><br><span class="line">for(int i=1;i&lt;=n;i++)&#123;</span><br><span class="line">for(int j=0;j&lt;=s;j++)&#123;//j为什么是从零开始的，因为体力可以为零 </span><br><span class="line">dp[i][j]=dp[i-1][j];</span><br><span class="line">if(xi[i]&lt;=a+b&amp;&amp;j&gt;=yi[i])</span><br><span class="line">//dp[i][j]=max(dp[i-1][j-yi[i]]+1,dp[i][j]);max函数很慢，使用三目运算比较快 </span><br><span class="line">dp[i][j]=dp[i-1][j-yi[i]]+1&gt;dp[i][j]?dp[i-1][j-yi[i]]+1:dp[i][j];</span><br><span class="line">            //状态转移方程</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">cout&lt;&lt;dp[n][s]&lt;&lt;endl;</span><br><span class="line">return 0;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>方法4、桶排序     知识点： ( <a href="https://blog.csdn.net/qq_27198345/article/details/126516234?ops_request_misc=%257B%2522request%255Fid%2522%253A%2522170004275716800213091668%2522%252C%2522scm%2522%253A%252220140713.130102334..%2522%257D&request_id=170004275716800213091668&biz_id=0&utm_medium=distribute.pc_search_result.none-task-blog-2~all~top_positive~default-1-126516234-null-null.142%5Ev96%5Epc_search_result_base5&utm_term=%E6%A1%B6%E6%8E%92%E5%BA%8F&spm=1018.2226.3001.4187">1</a>    <a href="https://oi-wiki.org/basic/bucket-sort/">2</a>  )   视频：（<a href="https://www.bilibili.com/video/BV1A4411N7cG/?spm_id_from=333.337.search-card.all.click&vd_source=6e52c3c8a1f4d6daf5e4cac5a4b8bd8b">1</a>）</p><p><a href="https://ac.nowcoder.com/acm/skill/detail/acm/1296">相关题目</a></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/2023/10/15/hello-world/"/>
      <url>/2023/10/15/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
