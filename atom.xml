<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Hexo</title>
  
  
  <link href="http://example.com/atom.xml" rel="self"/>
  
  <link href="http://example.com/"/>
  <updated>2023-11-24T02:26:59.175Z</updated>
  <id>http://example.com/</id>
  
  <author>
    <name>John Doe</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>美景</title>
    <link href="http://example.com/2023/11/24/%E7%BE%8E%E6%99%AF/"/>
    <id>http://example.com/2023/11/24/%E7%BE%8E%E6%99%AF/</id>
    <published>2023-11-24T02:13:24.000Z</published>
    <updated>2023-11-24T02:26:59.175Z</updated>
    
    <content type="html"><![CDATA[<p><img src="C:\Users\86193\Desktop\文件\IMG_20231124_100641.jpg" alt="IMG_20231124_100641"></p><p><img src="C:\Users\86193\Desktop\文件\IMG_20231124_100645.jpg" alt="IMG_20231124_100645"></p><p>​一颗秋树</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;&lt;img src=&quot;C:&#92;Users&#92;86193&#92;Desktop&#92;文件&#92;IMG_20231124_100641.jpg&quot; alt=&quot;IMG_20231124_100641&quot;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;C:&#92;Users&#92;86193&#92;Desktop&#92;文件&#92;IMG_20</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>杂笔</title>
    <link href="http://example.com/2023/11/23/%E6%9D%82%E7%AC%94/"/>
    <id>http://example.com/2023/11/23/%E6%9D%82%E7%AC%94/</id>
    <published>2023-11-23T07:48:00.000Z</published>
    <updated>2023-11-23T11:19:06.895Z</updated>
    
    
    
    
    
  </entry>
  
  <entry>
    <title>竞赛常用函数</title>
    <link href="http://example.com/2023/11/21/%E7%AB%9E%E8%B5%9B%E5%B8%B8%E7%94%A8%E5%87%BD%E6%95%B0/"/>
    <id>http://example.com/2023/11/21/%E7%AB%9E%E8%B5%9B%E5%B8%B8%E7%94%A8%E5%87%BD%E6%95%B0/</id>
    <published>2023-11-21T13:16:27.000Z</published>
    <updated>2023-11-21T13:18:00.240Z</updated>
    
    <content type="html"><![CDATA[<h1 id="函数"><a href="#函数" class="headerlink" title="函数"></a>函数</h1><h3 id="排序"><a href="#排序" class="headerlink" title="排序"></a>排序</h3><p>1、sort函数</p><p>注意点：默认升序排序，如果需要降序，需要加greater<int>()或者</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;函数&quot;&gt;&lt;a href=&quot;#函数&quot; class=&quot;headerlink&quot; title=&quot;函数&quot;&gt;&lt;/a&gt;函数&lt;/h1&gt;&lt;h3 id=&quot;排序&quot;&gt;&lt;a href=&quot;#排序&quot; class=&quot;headerlink&quot; title=&quot;排序&quot;&gt;&lt;/a&gt;排序&lt;/h3&gt;&lt;p&gt;1、s</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>健身日常</title>
    <link href="http://example.com/2023/11/20/%E5%81%A5%E8%BA%AB%E6%97%A5%E5%B8%B8/"/>
    <id>http://example.com/2023/11/20/%E5%81%A5%E8%BA%AB%E6%97%A5%E5%B8%B8/</id>
    <published>2023-11-20T11:15:19.000Z</published>
    <updated>2023-11-20T13:57:56.262Z</updated>
    
    <content type="html"><![CDATA[<h1 id="健身日常"><a href="#健身日常" class="headerlink" title="健身日常"></a>健身日常</h1><h4 id="增肌（1-0）："><a href="#增肌（1-0）：" class="headerlink" title="增肌（1.0）："></a>增肌（1.0）：</h4><p>一：锻炼</p><p>1、俯卧撑 15*3组&#x2F;d</p><p>2、哑铃正15*3组，反20 * 3组&#x2F;d</p><p>二：饮食</p><p>1、早上多吃鸡蛋（Eating two eggs in the morning  at least ）</p><p>2、早晚一瓶纯牛奶</p><h4 id="球类-1-0"><a href="#球类-1-0" class="headerlink" title="球类(1.0)"></a>球类(1.0)</h4><p>一：篮球</p><p>1、练好运球</p><h4 id="PER-WEEK"><a href="#PER-WEEK" class="headerlink" title="PER WEEK"></a>PER WEEK</h4><p>一、跑步(two kilometers)</p><h4 id="PER-MONTH"><a href="#PER-MONTH" class="headerlink" title="PER MONTH"></a>PER MONTH</h4><p>一：跑步（four kilometers）</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;健身日常&quot;&gt;&lt;a href=&quot;#健身日常&quot; class=&quot;headerlink&quot; title=&quot;健身日常&quot;&gt;&lt;/a&gt;健身日常&lt;/h1&gt;&lt;h4 id=&quot;增肌（1-0）：&quot;&gt;&lt;a href=&quot;#增肌（1-0）：&quot; class=&quot;headerlink&quot; title=&quot;增</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>前缀和、差分</title>
    <link href="http://example.com/2023/11/19/%E5%89%8D%E7%BC%80%E5%92%8C%E3%80%81%E5%B7%AE%E5%88%86/"/>
    <id>http://example.com/2023/11/19/%E5%89%8D%E7%BC%80%E5%92%8C%E3%80%81%E5%B7%AE%E5%88%86/</id>
    <published>2023-11-19T03:18:07.000Z</published>
    <updated>2023-11-20T14:50:37.077Z</updated>
    
    <content type="html"><![CDATA[<h1 id="前缀和"><a href="#前缀和" class="headerlink" title="前缀和"></a>前缀和</h1><h5 id="一维前缀和："><a href="#一维前缀和：" class="headerlink" title="一维前缀和："></a>一维前缀和：</h5><p>知识点： <a href="https://blog.csdn.net/weixin_45629285/article/details/111146240?ops_request_misc=%257B%2522request%255Fid%2522%253A%2522170036394016800226565211%2522%252C%2522scm%2522%253A%252220140713.130102334..%2522%257D&request_id=170036394016800226565211&biz_id=0&utm_medium=distribute.pc_search_result.none-task-blog-2~all~top_positive~default-1-111146240-null-null.142%5Ev96%5Epc_search_result_base5&utm_term=%E5%89%8D%E7%BC%80%E5%92%8C&spm=1018.2226.3001.4187">csdn</a>  </p><p>作用：1、求区间和（通过预处理的方式快速得到一个区间的数字和）（模板题）：<a href="https://www.luogu.com.cn/problem/P8218">求区间和</a>   </p><h6 id="Subsequences-Summing-to-Sevens-S（洛谷）"><a href="#Subsequences-Summing-to-Sevens-S（洛谷）" class="headerlink" title="Subsequences Summing to Sevens S（洛谷）"></a>Subsequences Summing to Sevens S（<a href="https://www.luogu.com.cn/problem/P3131">洛谷</a>）</h6><p>方法一：暴力前缀和</p><pre><code>#include&lt;bits/stdc++.h&gt;using namespace std;const int N=5e4+10;int a[N];int sum[N];int n;int main()&#123;    cin&gt;&gt;n;    for(int i=1;i&lt;=n;i++)&#123;        cin&gt;&gt;a[i];        sum[i]=sum[i-1]+a[i];    &#125;    int ans=0,m=n;    while(m--)&#123;        for(int i=1;i&lt;=n-m;i++)&#123;            if((sum[i+m]-sum[i-1])%7==0)&#123;                ans=m;                cout&lt;&lt;ans+1&lt;&lt;endl;                return 0;            &#125;        &#125;    &#125;    cout&lt;&lt;0&lt;&lt;endl;    return 0;&#125;//部分数据TLE，时间复杂度为（N*N）</code></pre><p>方法二：前缀和+同余定理  <a href="https://blog.csdn.net/alm_of_csdn/article/details/127370560">题解</a></p><pre><code>#include&lt;bits/stdc++.h&gt;using namespace std;const int N=5e4+10;int n;int pre[N];int first[7],last[7];int main()&#123;    cin&gt;&gt;n;    for(int i=1;i&lt;=n;i++)&#123;        cin&gt;&gt;pre[i];        pre[i]=(pre[i-1]+pre[i])%7;    &#125;    for(int i=n;i&gt;=1;i--)        first[pre[i]]=i;    first[0]=0;//注意这一步很关键     for(int j=1;j&lt;=n;j++)        last[pre[j]]=j;    int ma=0;    for(int i=0;i&lt;=6;i++)        ma=max(ma,last[i]-first[i]);    cout&lt;&lt;ma&lt;&lt;endl;    return 0;&#125;</code></pre><p>方法三：动态规划（有一亿点难理解）</p><pre><code>#include&lt;bits/stdc++.h&gt;using namespace std;int n,f[50005][7],ans;main()&#123;    cin&gt;&gt;n;    for(int i=1,x;i&lt;=n;i++)    &#123;        cin&gt;&gt;x;        for(int j=0;j&lt;7;j++)            if(f[i-1][j])                f[i][(j+x)%7]=f[i-1][j]+1;        f[i][x%7]=max(f[i][x%7],1);    &#125;    for(int i=1;i&lt;=n;i++)        ans=max(ans,f[i][0]);    printf(&quot;%d\n&quot;,ans);    return 0;&#125;</code></pre><p>相关题型：</p><p>错题：<a href="http://172.17.4.116/problem/3149">信号灯</a>  </p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;前缀和&quot;&gt;&lt;a href=&quot;#前缀和&quot; class=&quot;headerlink&quot; title=&quot;前缀和&quot;&gt;&lt;/a&gt;前缀和&lt;/h1&gt;&lt;h5 id=&quot;一维前缀和：&quot;&gt;&lt;a href=&quot;#一维前缀和：&quot; class=&quot;headerlink&quot; title=&quot;一维前缀和：&quot;&gt;&lt;</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>English-speaking</title>
    <link href="http://example.com/2023/11/18/English-speaking/"/>
    <id>http://example.com/2023/11/18/English-speaking/</id>
    <published>2023-11-18T13:38:36.000Z</published>
    <updated>2023-11-24T09:27:09.838Z</updated>
    
    <content type="html"><![CDATA[<h1 id="英语口语"><a href="#英语口语" class="headerlink" title="英语口语"></a>英语口语</h1><h4 id="步骤（1-1）："><a href="#步骤（1-1）：" class="headerlink" title="步骤（1.1）："></a>步骤（1.1）：</h4><p>1、找出一段视频作为学习内容</p><p>2、查找出这段视频的生词并熟记</p><p>3、找出这段视频中听不懂的句子并背诵</p><p>4、找出视频中有连读现象的句子</p><p>5、跟着这段视频模仿，他说一句，我读一句</p><p>6、遮掉字幕，把自己当作配音演员，一句一句配音</p><p>7、对照配音视频和原视频进行分析，反馈</p><h4 id="常见连读："><a href="#常见连读：" class="headerlink" title="常见连读："></a>常见连读：</h4><p>规则：（<a href="https://www.bilibili.com/video/BV1hc411V7WF/?spm_id_from=333.337.search-card.all.click&vd_source=6e52c3c8a1f4d6daf5e4cac5a4b8bd8b">视频1</a>） （视频2）</p><p>一、词尾辅音+词头元音：直接连读</p><p>​stand-up ， like-it  ，put-up  ，all-of-it </p><p>​i‘ m-an-actor </p><p>​    特殊：词尾 t +词头元音：t不读 &#x2F;t&#x2F; 而是快且轻的 &#x2F;d&#x2F;</p><p>​eat-it-out  ， got it</p><p>二、辅音+相同或相似辅音只发一次音</p><p>​ this Saturday ，well lit  ，his sister  ，yes sir </p><p>​特殊：爆破音（b-p-k-g-t-d）+辅音 只做口型不发音</p><p>​good  day  ，big game  ，what time </p><h5 id="一：白莲花度假村"><a href="#一：白莲花度假村" class="headerlink" title="一：白莲花度假村"></a>一：白莲花度假村</h5><p>1：第一季第一集（00：00-10：00）</p><p>单词：</p><p>human remains： 人体残骸closet：壁橱，储藏室，隐藏的，把..关在房间</p><p>coconut：椰子   snorter：强风，单套绳</p><p>castaway：(沉船后)游泳逃生到孤岛等荒僻处的人</p><p>edge:边沿，优势，慢慢移动 heiress：女继承人，嗣女</p><p>resort：求助，饭店，度假胜地，求助property：财产，庄园</p><p>disclosure：披露，暴露的事实generic：普通的，一般的，无商标的</p><p>ethos:风气，思想道德pleasant：友好的，令人愉快的，和善的</p><p>tropical：热带的kabuki：歌舞伎</p><p>vagueness：含糊不清，茫然dollop：一团，一块，少许</p><p>mayonnaise：蛋黄酱tit:奶头，乳头</p><p>tray：托盘boob：乳房，傻瓜</p><p>stain：污渍，染色剂，给..着色，玷污suite：一套，一套房间</p><p>cart:手推车，运货马车，强行带走syllable：音节</p><p>masculine：阳性，男子汉气概的massage：按摩，按摩</p><p>escort:护卫队，护送 trainee:练习生，实习生</p><p>herniated disc：椎间盘突出lobster：龙虾</p><p>bake：烤，烘烤的成品，烤</p><p>yeah:同yes，是的，对</p><p>yum：味道好或者气味好</p><p>句子：</p><p>1、Looks like you got a dollop of mayonnaise on your top ,Lani？</p><p>2、Just hold the tray up high and cover the stain on your boob</p><p>3、but wave like you mean it</p><p>连读：<br>they’re、other than that、</p><p>i ‘d like to be a castaway with you: like也没发全音，with后音节没发音<br>i would linger a while and just gaze into your lovely eyes so blue  : into中的in没有发音</p><p>so they put up with  her: put up 规则1，with her 省音</p><p>2：第一季第一集 00：10- 00：20</p><p>单词：</p><p>virtual:模拟的，虚拟的，线上的</p><p>swanky：时髦且豪华的</p><p>stuff ：填饱肚子</p><p>plunge pool ：泳池</p><p>patio：露台</p><p>balcony：阳台</p><p>screw：螺丝钉，拧紧</p><p>wheelie：推车</p><p>trunk: 车厢</p><p>clutter：杂乱的东西，乱放</p><p>galley:厨房</p><p>swear：发誓</p><p>fricking：真是，该死的</p><p>g-o-t-t-a：have got to 的缩写，不得不</p><p>tuna fish: 金枪鱼</p><p>casual：临时工，随意的</p><p>infinity pool：大海    waterfall pool ：瀑布  fountain pool ：喷泉</p><p>gorgeous：漂亮的</p><p>bummer：倒霉</p><p>fabulous: 极好的</p><p>mummy：妈咪</p><p>testicle：睾丸</p><p>disturbing：令人不安的</p><p>deal with: 面对parade:游行，检阅</p><p>nuts：疯狂的progress：进步</p><p>句子：</p><p>1、this is the swankiest hotel room  i’ v e ever stayed in.</p><p>2、will you be needing anything else at this time ? </p><p>3、i think  i might’ve double-booked  the pineapple suite</p><p>4、see ,in situations like  that ,  just always  stay  positive . remind these people  of all the fabulous things</p><p>they  always possess(具有，拥有).</p><p>5、well , then all  the more reason  to pay him a little attention now </p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;英语口语&quot;&gt;&lt;a href=&quot;#英语口语&quot; class=&quot;headerlink&quot; title=&quot;英语口语&quot;&gt;&lt;/a&gt;英语口语&lt;/h1&gt;&lt;h4 id=&quot;步骤（1-1）：&quot;&gt;&lt;a href=&quot;#步骤（1-1）：&quot; class=&quot;headerlink&quot; title=&quot;步</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>排序</title>
    <link href="http://example.com/2023/11/17/%E6%8E%92%E5%BA%8F/"/>
    <id>http://example.com/2023/11/17/%E6%8E%92%E5%BA%8F/</id>
    <published>2023-11-17T09:00:01.000Z</published>
    <updated>2023-11-17T09:29:55.016Z</updated>
    
    <content type="html"><![CDATA[<h1 id="排序"><a href="#排序" class="headerlink" title="排序"></a>排序</h1><h3 id="桶排序"><a href="#桶排序" class="headerlink" title="桶排序"></a>桶排序</h3><p>知识点：<a href="https://blog.csdn.net/qq_52253798/article/details/122970542?ops_request_misc=&request_id=&biz_id=102&utm_term=%E6%A1%B6%E6%8E%92%E5%BA%8F&utm_medium=distribute.pc_search_result.none-task-blog-2~all~sobaiduweb~default-1-122970542.nonecase&spm=1018.2226.3001.4187">1</a>  <a href="https://blog.csdn.net/qq_27198345/article/details/126516234?ops_request_misc=%257B%2522request%255Fid%2522%253A%2522170021142516800186522337%2522%252C%2522scm%2522%253A%252220140713.130102334..%2522%257D&request_id=170021142516800186522337&biz_id=0&utm_medium=distribute.pc_search_result.none-task-blog-2~all~top_positive~default-1-126516234-null-null.142%5Ev96%5Epc_search_result_base5&utm_term=%E6%A1%B6%E6%8E%92%E5%BA%8F&spm=1018.2226.3001.4187">2</a> </p><p>相关题目：<a href="https://ac.nowcoder.com/acm/skill/detail/acm/1296">牛客</a>   </p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;排序&quot;&gt;&lt;a href=&quot;#排序&quot; class=&quot;headerlink&quot; title=&quot;排序&quot;&gt;&lt;/a&gt;排序&lt;/h1&gt;&lt;h3 id=&quot;桶排序&quot;&gt;&lt;a href=&quot;#桶排序&quot; class=&quot;headerlink&quot; title=&quot;桶排序&quot;&gt;&lt;/a&gt;桶排序&lt;/h3&gt;&lt;p</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>stl容器</title>
    <link href="http://example.com/2023/11/16/stl%E5%AE%B9%E5%99%A8/"/>
    <id>http://example.com/2023/11/16/stl%E5%AE%B9%E5%99%A8/</id>
    <published>2023-11-16T09:28:23.000Z</published>
    <updated>2023-11-21T14:08:39.721Z</updated>
    
    <content type="html"><![CDATA[<h1 id="stl容器"><a href="#stl容器" class="headerlink" title="stl容器"></a>stl容器</h1><h2 id="map：关联容器"><a href="#map：关联容器" class="headerlink" title="map：关联容器"></a>map：关联容器</h2><p>知识点： <a href="https://blog.csdn.net/sevenjoin/article/details/81943864?ops_request_misc=%257B%2522request%255Fid%2522%253A%2522170012272716800225546285%2522%252C%2522scm%2522%253A%252220140713.130102334..%2522%257D&request_id=170012272716800225546285&biz_id=0&utm_medium=distribute.pc_search_result.none-task-blog-2~all~top_positive~default-1-81943864-null-null.142%5Ev96%5Epc_search_result_base5&utm_term=map&spm=1018.2226.3001.4187">csdn</a>     <a href="https://oi-wiki.org/lang/csl/associative-container/#map">oi-wiki</a>    </p><h3 id="queue-队列"><a href="#queue-队列" class="headerlink" title="queue: 队列"></a>queue: 队列</h3><p>知识点：<a href="https://blog.csdn.net/fuhanghang/article/details/125087433?ops_request_misc=%257B%2522request%255Fid%2522%253A%2522170027848916800182192819%2522%252C%2522scm%2522%253A%252220140713.130102334..%2522%257D&request_id=170027848916800182192819&biz_id=0&utm_medium=distribute.pc_search_result.none-task-blog-2~all~top_positive~default-1-125087433-null-null.142%5Ev96%5Epc_search_result_base5&utm_term=queue&spm=1018.2226.3001.4187">csdn</a>  </p><p>注意点：</p><p>1、如果队列为空，则empty（）返回值为true。 </p><p>2、greater<type>为升序，less<type>为降序</p><h4 id="priority-queue-优先队列"><a href="#priority-queue-优先队列" class="headerlink" title="priority_queue:优先队列"></a>priority_queue:优先队列</h4><p>知识点：<a href="https://blog.csdn.net/weixin_36888577/article/details/79937886?ops_request_misc=%257B%2522request%255Fid%2522%253A%2522170057358316800184153123%2522%252C%2522scm%2522%253A%252220140713.130102334..%2522%257D&request_id=170057358316800184153123&biz_id=0&utm_medium=distribute.pc_search_result.none-task-blog-2~all~top_positive~default-1-79937886-null-null.142%5Ev96%5Epc_search_result_base5&utm_term=%E4%BC%98%E5%85%88%E9%98%9F%E5%88%97&spm=1018.2226.3001.4187">csdn</a>  </p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;stl容器&quot;&gt;&lt;a href=&quot;#stl容器&quot; class=&quot;headerlink&quot; title=&quot;stl容器&quot;&gt;&lt;/a&gt;stl容器&lt;/h1&gt;&lt;h2 id=&quot;map：关联容器&quot;&gt;&lt;a href=&quot;#map：关联容器&quot; class=&quot;headerlink&quot; titl</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>贪心问题1</title>
    <link href="http://example.com/2023/11/11/%E8%B4%AA%E5%BF%83%E9%97%AE%E9%A2%981/"/>
    <id>http://example.com/2023/11/11/%E8%B4%AA%E5%BF%83%E9%97%AE%E9%A2%981/</id>
    <published>2023-11-11T09:07:12.000Z</published>
    <updated>2023-11-18T10:19:05.847Z</updated>
    
    <content type="html"><![CDATA[<h1 id="23-11-15"><a href="#23-11-15" class="headerlink" title="23-11-15"></a>23-11-15</h1><h2 id="一、删除问题"><a href="#一、删除问题" class="headerlink" title="一、删除问题"></a>一、删除问题</h2><p>注意输出：前导0要删掉，如果全部删掉，只需要输出0即可</p><p>方法一： <a href="https://www.luogu.com.cn/blog/treer/solution-p1106">链接</a>  </p><p>代码：</p><pre><code></code></pre><h2 id="二、陶陶摘苹果（升级版）—-贪心问题"><a href="#二、陶陶摘苹果（升级版）—-贪心问题" class="headerlink" title="二、陶陶摘苹果（升级版）—-贪心问题"></a>二、陶陶摘苹果（升级版）—-贪心问题</h2><p>方法1（我的解法）：</p><p>思路：使用pair来存储高度和体力值，用sort两次排序。第一次按高度从小到大排序（排序范围：1-n），第二次在第一次的基础上按体力值从小到大排序（排序范围1-cnt&#x2F;&#x2F;cnt是小于等于淘淘能够够到的高度的苹果的数量）。然后用循环扫一遍就可以。</p><p>代码：</p><pre><code>#include&lt;bits/stdc++.h&gt;using namespace std;const int N=1e4;typedef pair&lt;int,int&gt; PII;PII x[N];int n,s,a,b;bool cmp(PII a,PII b)&#123;    return a.second&lt;b.second;&#125;int main()&#123;    cin&gt;&gt;n&gt;&gt;s&gt;&gt;a&gt;&gt;b;    int cnt=0;    for(int i=0;i&lt;n;i++)&#123;        cin&gt;&gt;x[i].first&gt;&gt;x[i].second;        if(x[i].first&lt;=a+b) cnt++;    &#125;    sort(x,x+n);    sort(x,x+cnt,cmp);    int res=0;    for(int i=0;i&lt;cnt;i++)&#123;        if(s&gt;=x[i].second)&#123;            res++;            s-=x[i].second;            //cout&lt;&lt;x[i].first&lt;&lt;x[i].second&lt;&lt;endl;        &#125;    &#125;    cout&lt;&lt;res&lt;&lt;endl;    return 0;&#125;</code></pre><p>方法2：使用dfs，搭配剪枝，使用变量存储来减少函数的调用以及记忆化搜索来降低时间复杂度。</p><p>代码：</p><pre><code>#include&lt;bits/stdc++.h&gt;using namespace std;int n,s,a,b;bool visit[5005][5005];//记忆化搜索int mem[5005][5005];struct apple &#123;    int xi,yi;&#125;ap[5005];int dfs(int num,int rest)&#123;    if(num&gt;n||a+b&lt;ap[num].xi) return 0;//剪枝     if(visit[num][rest]) return mem[num][rest];    visit[num][rest]=true;    int maxn=dfs(num+1,rest);//减少函数的调用     if(ap[num].xi&lt;=a+b&amp;&amp;rest&gt;=ap[num].yi)&#123;        int t= dfs(num+1,rest-ap[num].yi)+1;//减少函数的调用        maxn=t&gt;maxn?t:maxn;    &#125;    return mem[num][rest]=maxn; &#125; bool cmp(apple a,apple b)&#123;//从小到大     return a.xi&lt;b.xi;&#125;int main()&#123;    cin&gt;&gt;n&gt;&gt;s&gt;&gt;a&gt;&gt;b;//苹果个数，体力值，板凳高度，伸长手高度     for(int i=1;i&lt;=n;i++) cin&gt;&gt;ap[i].xi&gt;&gt;ap[i].yi;    sort(ap+1,ap+n+1,cmp);    cout&lt;&lt;dfs(1,s);//面对第一个苹果，体力值为s     return 0;&#125;</code></pre><p>方法3、dp（动态规划），比较简单的01背包问题</p><p>代码：</p><pre><code>#include&lt;bits/stdc++.h&gt;using namespace std;int n,s,a,b;int xi[5005],yi[5005];int dp[5005][1001];int main()&#123;    cin&gt;&gt;n&gt;&gt;s&gt;&gt;a&gt;&gt;b;    for(int i=1;i&lt;=n;i++)        cin&gt;&gt;xi[i]&gt;&gt;yi[i];    for(int i=1;i&lt;=n;i++)&#123;        for(int j=0;j&lt;=s;j++)&#123;//j为什么是从零开始的，因为体力可以为零             dp[i][j]=dp[i-1][j];            if(xi[i]&lt;=a+b&amp;&amp;j&gt;=yi[i])            //dp[i][j]=max(dp[i-1][j-yi[i]]+1,dp[i][j]);max函数很慢，使用三目运算比较快             dp[i][j]=dp[i-1][j-yi[i]]+1&gt;dp[i][j]?dp[i-1][j-yi[i]]+1:dp[i][j];            //状态转移方程        &#125;    &#125;    cout&lt;&lt;dp[n][s]&lt;&lt;endl;    return 0;&#125;</code></pre><p>方法4、桶排序     知识点： ( <a href="https://blog.csdn.net/qq_27198345/article/details/126516234?ops_request_misc=%257B%2522request%255Fid%2522%253A%2522170004275716800213091668%2522%252C%2522scm%2522%253A%252220140713.130102334..%2522%257D&request_id=170004275716800213091668&biz_id=0&utm_medium=distribute.pc_search_result.none-task-blog-2~all~top_positive~default-1-126516234-null-null.142%5Ev96%5Epc_search_result_base5&utm_term=%E6%A1%B6%E6%8E%92%E5%BA%8F&spm=1018.2226.3001.4187">1</a>    <a href="https://oi-wiki.org/basic/bucket-sort/">2</a>  )   视频：（<a href="https://www.bilibili.com/video/BV1A4411N7cG/?spm_id_from=333.337.search-card.all.click&vd_source=6e52c3c8a1f4d6daf5e4cac5a4b8bd8b">1</a>）</p><p>代码：</p><pre><code>#include &lt;bits/stdc++.h&gt;using namespace std;const int N=5e3+10;int n,s,a,b,t;int c[101];int main() &#123;    cin&gt;&gt;n&gt;&gt;s&gt;&gt;a&gt;&gt;b;    a+=b;    for(int i=0;i&lt;n;i++)&#123;        int x,y;        cin&gt;&gt;x&gt;&gt;y;        if(x&lt;=a) c[y]++;    &#125;    for(int i=0;i&lt;=100&amp;&amp;s&gt;=0;i++)&#123;//有的体力值是零         while(c[i])&#123;            s-=i;            t++;            c[i]--;            if(s&lt;0)&#123;                t--;                break;            &#125;        &#125;    &#125;    cout&lt;&lt;t&lt;&lt;endl;    return 0;&#125;</code></pre><p><a href="https://ac.nowcoder.com/acm/skill/detail/acm/1296">相关题目</a> </p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;23-11-15&quot;&gt;&lt;a href=&quot;#23-11-15&quot; class=&quot;headerlink&quot; title=&quot;23-11-15&quot;&gt;&lt;/a&gt;23-11-15&lt;/h1&gt;&lt;h2 id=&quot;一、删除问题&quot;&gt;&lt;a href=&quot;#一、删除问题&quot; class=&quot;headerli</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="http://example.com/2023/10/15/hello-world/"/>
    <id>http://example.com/2023/10/15/hello-world/</id>
    <published>2023-10-15T02:47:28.650Z</published>
    <updated>2023-11-17T09:24:47.727Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><pre><code class="bash">$ hexo new &quot;My New Post&quot;</code></pre><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><pre><code class="bash">$ hexo server</code></pre><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><pre><code class="bash">$ hexo generate</code></pre><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><pre><code class="bash">$ hexo deploy</code></pre><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.io/docs/&quot;&gt;documentation&lt;/a&gt; for</summary>
      
    
    
    
    
  </entry>
  
</feed>
