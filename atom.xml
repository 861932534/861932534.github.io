<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Hexo</title>
  
  
  <link href="http://example.com/atom.xml" rel="self"/>
  
  <link href="http://example.com/"/>
  <updated>2023-11-17T09:29:55.016Z</updated>
  <id>http://example.com/</id>
  
  <author>
    <name>John Doe</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>排序</title>
    <link href="http://example.com/2023/11/17/%E6%8E%92%E5%BA%8F/"/>
    <id>http://example.com/2023/11/17/%E6%8E%92%E5%BA%8F/</id>
    <published>2023-11-17T09:00:01.000Z</published>
    <updated>2023-11-17T09:29:55.016Z</updated>
    
    <content type="html"><![CDATA[<h1 id="排序"><a href="#排序" class="headerlink" title="排序"></a>排序</h1><h3 id="桶排序"><a href="#桶排序" class="headerlink" title="桶排序"></a>桶排序</h3><p>知识点：<a href="https://blog.csdn.net/qq_52253798/article/details/122970542?ops_request_misc=&request_id=&biz_id=102&utm_term=%E6%A1%B6%E6%8E%92%E5%BA%8F&utm_medium=distribute.pc_search_result.none-task-blog-2~all~sobaiduweb~default-1-122970542.nonecase&spm=1018.2226.3001.4187">1</a>  <a href="https://blog.csdn.net/qq_27198345/article/details/126516234?ops_request_misc=%257B%2522request%255Fid%2522%253A%2522170021142516800186522337%2522%252C%2522scm%2522%253A%252220140713.130102334..%2522%257D&request_id=170021142516800186522337&biz_id=0&utm_medium=distribute.pc_search_result.none-task-blog-2~all~top_positive~default-1-126516234-null-null.142%5Ev96%5Epc_search_result_base5&utm_term=%E6%A1%B6%E6%8E%92%E5%BA%8F&spm=1018.2226.3001.4187">2</a> </p><p>相关题目：<a href="https://ac.nowcoder.com/acm/skill/detail/acm/1296">牛客</a>   </p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;排序&quot;&gt;&lt;a href=&quot;#排序&quot; class=&quot;headerlink&quot; title=&quot;排序&quot;&gt;&lt;/a&gt;排序&lt;/h1&gt;&lt;h3 id=&quot;桶排序&quot;&gt;&lt;a href=&quot;#桶排序&quot; class=&quot;headerlink&quot; title=&quot;桶排序&quot;&gt;&lt;/a&gt;桶排序&lt;/h3&gt;&lt;p</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>stl容器</title>
    <link href="http://example.com/2023/11/16/stl%E5%AE%B9%E5%99%A8/"/>
    <id>http://example.com/2023/11/16/stl%E5%AE%B9%E5%99%A8/</id>
    <published>2023-11-16T09:28:23.000Z</published>
    <updated>2023-11-18T03:52:33.403Z</updated>
    
    <content type="html"><![CDATA[<h1 id="stl容器"><a href="#stl容器" class="headerlink" title="stl容器"></a>stl容器</h1><h2 id="map：关联容器"><a href="#map：关联容器" class="headerlink" title="map：关联容器"></a>map：关联容器</h2><p>知识点： <a href="https://blog.csdn.net/sevenjoin/article/details/81943864?ops_request_misc=%257B%2522request%255Fid%2522%253A%2522170012272716800225546285%2522%252C%2522scm%2522%253A%252220140713.130102334..%2522%257D&request_id=170012272716800225546285&biz_id=0&utm_medium=distribute.pc_search_result.none-task-blog-2~all~top_positive~default-1-81943864-null-null.142%5Ev96%5Epc_search_result_base5&utm_term=map&spm=1018.2226.3001.4187">csdn</a>     <a href="https://oi-wiki.org/lang/csl/associative-container/#map">oi-wiki</a>    </p><h3 id="queue-队列"><a href="#queue-队列" class="headerlink" title="queue: 队列"></a>queue: 队列</h3><p>知识点：<a href="https://blog.csdn.net/fuhanghang/article/details/125087433?ops_request_misc=%257B%2522request%255Fid%2522%253A%2522170027848916800182192819%2522%252C%2522scm%2522%253A%252220140713.130102334..%2522%257D&request_id=170027848916800182192819&biz_id=0&utm_medium=distribute.pc_search_result.none-task-blog-2~all~top_positive~default-1-125087433-null-null.142%5Ev96%5Epc_search_result_base5&utm_term=queue&spm=1018.2226.3001.4187">csdn</a>   </p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;stl容器&quot;&gt;&lt;a href=&quot;#stl容器&quot; class=&quot;headerlink&quot; title=&quot;stl容器&quot;&gt;&lt;/a&gt;stl容器&lt;/h1&gt;&lt;h2 id=&quot;map：关联容器&quot;&gt;&lt;a href=&quot;#map：关联容器&quot; class=&quot;headerlink&quot; titl</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>贪心问题1</title>
    <link href="http://example.com/2023/11/11/%E8%B4%AA%E5%BF%83%E9%97%AE%E9%A2%981/"/>
    <id>http://example.com/2023/11/11/%E8%B4%AA%E5%BF%83%E9%97%AE%E9%A2%981/</id>
    <published>2023-11-11T09:07:12.000Z</published>
    <updated>2023-11-18T10:19:05.847Z</updated>
    
    <content type="html"><![CDATA[<h1 id="23-11-15"><a href="#23-11-15" class="headerlink" title="23-11-15"></a>23-11-15</h1><h2 id="一、删除问题"><a href="#一、删除问题" class="headerlink" title="一、删除问题"></a>一、删除问题</h2><p>注意输出：前导0要删掉，如果全部删掉，只需要输出0即可</p><p>方法一： <a href="https://www.luogu.com.cn/blog/treer/solution-p1106">链接</a>  </p><p>代码：</p><pre><code></code></pre><h2 id="二、陶陶摘苹果（升级版）—-贪心问题"><a href="#二、陶陶摘苹果（升级版）—-贪心问题" class="headerlink" title="二、陶陶摘苹果（升级版）—-贪心问题"></a>二、陶陶摘苹果（升级版）—-贪心问题</h2><p>方法1（我的解法）：</p><p>思路：使用pair来存储高度和体力值，用sort两次排序。第一次按高度从小到大排序（排序范围：1-n），第二次在第一次的基础上按体力值从小到大排序（排序范围1-cnt&#x2F;&#x2F;cnt是小于等于淘淘能够够到的高度的苹果的数量）。然后用循环扫一遍就可以。</p><p>代码：</p><pre><code>#include&lt;bits/stdc++.h&gt;using namespace std;const int N=1e4;typedef pair&lt;int,int&gt; PII;PII x[N];int n,s,a,b;bool cmp(PII a,PII b)&#123;    return a.second&lt;b.second;&#125;int main()&#123;    cin&gt;&gt;n&gt;&gt;s&gt;&gt;a&gt;&gt;b;    int cnt=0;    for(int i=0;i&lt;n;i++)&#123;        cin&gt;&gt;x[i].first&gt;&gt;x[i].second;        if(x[i].first&lt;=a+b) cnt++;    &#125;    sort(x,x+n);    sort(x,x+cnt,cmp);    int res=0;    for(int i=0;i&lt;cnt;i++)&#123;        if(s&gt;=x[i].second)&#123;            res++;            s-=x[i].second;            //cout&lt;&lt;x[i].first&lt;&lt;x[i].second&lt;&lt;endl;        &#125;    &#125;    cout&lt;&lt;res&lt;&lt;endl;    return 0;&#125;</code></pre><p>方法2：使用dfs，搭配剪枝，使用变量存储来减少函数的调用以及记忆化搜索来降低时间复杂度。</p><p>代码：</p><pre><code>#include&lt;bits/stdc++.h&gt;using namespace std;int n,s,a,b;bool visit[5005][5005];//记忆化搜索int mem[5005][5005];struct apple &#123;    int xi,yi;&#125;ap[5005];int dfs(int num,int rest)&#123;    if(num&gt;n||a+b&lt;ap[num].xi) return 0;//剪枝     if(visit[num][rest]) return mem[num][rest];    visit[num][rest]=true;    int maxn=dfs(num+1,rest);//减少函数的调用     if(ap[num].xi&lt;=a+b&amp;&amp;rest&gt;=ap[num].yi)&#123;        int t= dfs(num+1,rest-ap[num].yi)+1;//减少函数的调用        maxn=t&gt;maxn?t:maxn;    &#125;    return mem[num][rest]=maxn; &#125; bool cmp(apple a,apple b)&#123;//从小到大     return a.xi&lt;b.xi;&#125;int main()&#123;    cin&gt;&gt;n&gt;&gt;s&gt;&gt;a&gt;&gt;b;//苹果个数，体力值，板凳高度，伸长手高度     for(int i=1;i&lt;=n;i++) cin&gt;&gt;ap[i].xi&gt;&gt;ap[i].yi;    sort(ap+1,ap+n+1,cmp);    cout&lt;&lt;dfs(1,s);//面对第一个苹果，体力值为s     return 0;&#125;</code></pre><p>方法3、dp（动态规划），比较简单的01背包问题</p><p>代码：</p><pre><code>#include&lt;bits/stdc++.h&gt;using namespace std;int n,s,a,b;int xi[5005],yi[5005];int dp[5005][1001];int main()&#123;    cin&gt;&gt;n&gt;&gt;s&gt;&gt;a&gt;&gt;b;    for(int i=1;i&lt;=n;i++)        cin&gt;&gt;xi[i]&gt;&gt;yi[i];    for(int i=1;i&lt;=n;i++)&#123;        for(int j=0;j&lt;=s;j++)&#123;//j为什么是从零开始的，因为体力可以为零             dp[i][j]=dp[i-1][j];            if(xi[i]&lt;=a+b&amp;&amp;j&gt;=yi[i])            //dp[i][j]=max(dp[i-1][j-yi[i]]+1,dp[i][j]);max函数很慢，使用三目运算比较快             dp[i][j]=dp[i-1][j-yi[i]]+1&gt;dp[i][j]?dp[i-1][j-yi[i]]+1:dp[i][j];            //状态转移方程        &#125;    &#125;    cout&lt;&lt;dp[n][s]&lt;&lt;endl;    return 0;&#125;</code></pre><p>方法4、桶排序     知识点： ( <a href="https://blog.csdn.net/qq_27198345/article/details/126516234?ops_request_misc=%257B%2522request%255Fid%2522%253A%2522170004275716800213091668%2522%252C%2522scm%2522%253A%252220140713.130102334..%2522%257D&request_id=170004275716800213091668&biz_id=0&utm_medium=distribute.pc_search_result.none-task-blog-2~all~top_positive~default-1-126516234-null-null.142%5Ev96%5Epc_search_result_base5&utm_term=%E6%A1%B6%E6%8E%92%E5%BA%8F&spm=1018.2226.3001.4187">1</a>    <a href="https://oi-wiki.org/basic/bucket-sort/">2</a>  )   视频：（<a href="https://www.bilibili.com/video/BV1A4411N7cG/?spm_id_from=333.337.search-card.all.click&vd_source=6e52c3c8a1f4d6daf5e4cac5a4b8bd8b">1</a>）</p><p>代码：</p><pre><code>#include &lt;bits/stdc++.h&gt;using namespace std;const int N=5e3+10;int n,s,a,b,t;int c[101];int main() &#123;    cin&gt;&gt;n&gt;&gt;s&gt;&gt;a&gt;&gt;b;    a+=b;    for(int i=0;i&lt;n;i++)&#123;        int x,y;        cin&gt;&gt;x&gt;&gt;y;        if(x&lt;=a) c[y]++;    &#125;    for(int i=0;i&lt;=100&amp;&amp;s&gt;=0;i++)&#123;//有的体力值是零         while(c[i])&#123;            s-=i;            t++;            c[i]--;            if(s&lt;0)&#123;                t--;                break;            &#125;        &#125;    &#125;    cout&lt;&lt;t&lt;&lt;endl;    return 0;&#125;</code></pre><p><a href="https://ac.nowcoder.com/acm/skill/detail/acm/1296">相关题目</a> </p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;23-11-15&quot;&gt;&lt;a href=&quot;#23-11-15&quot; class=&quot;headerlink&quot; title=&quot;23-11-15&quot;&gt;&lt;/a&gt;23-11-15&lt;/h1&gt;&lt;h2 id=&quot;一、删除问题&quot;&gt;&lt;a href=&quot;#一、删除问题&quot; class=&quot;headerli</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="http://example.com/2023/10/15/hello-world/"/>
    <id>http://example.com/2023/10/15/hello-world/</id>
    <published>2023-10-15T02:47:28.650Z</published>
    <updated>2023-11-17T09:24:47.727Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><pre><code class="bash">$ hexo new &quot;My New Post&quot;</code></pre><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><pre><code class="bash">$ hexo server</code></pre><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><pre><code class="bash">$ hexo generate</code></pre><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><pre><code class="bash">$ hexo deploy</code></pre><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.io/docs/&quot;&gt;documentation&lt;/a&gt; for</summary>
      
    
    
    
    
  </entry>
  
</feed>
